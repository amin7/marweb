# A Makefile for fusing Google Test and building a sample test against it.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make check  - makes everything and runs the built sample test.
#   make clean  - removes all files generated by make.

# Points to the root of fused Google Test, relative to where this file is.
GTEST_DIR= ../../googletest/googletest
FUSED_GTEST_DIR = output

MKDIR_P = mkdir -p

# Where to find gtest_main.cc.
GTEST_MAIN_CC = $(GTEST_DIR)/src/gtest_main.cc

GTEST_INCLUDE= -I$(GTEST_DIR)/include -I$(GTEST_DIR)

INCLUDE_PATH = -I../libs
TESTS_CPP =../src/libs/CGcodeParser.cpp CGcodeParser_test.cpp
TESTS_CPP+=../src/libs/CMarlinCon.cpp
TESTS_CPP+=../src/libs/CProbeArea.cpp CProbeArea_test.cpp
TESTS_CPP+=CMarlinCon_test.cpp
TESTS_CPP+=CProbeAreaGenerator_test.cpp ../src/libs/CProbeAreaGenerator.cpp
TESTS_CPP+=CMarlinConCMDListener_test.cpp ../src/libs/CMarlinConCMDListener.cpp
TESTS_CPP+=CBedLevel_test.cpp ../src/libs/CBedLevel.cpp
TESTS_CPP+=CGcodeBedLevelProducer_test.cpp ../src/libs/CGcodeBedLevelProducer.cpp
OBJ_DIR=./obj/
OBJS=$(subst .cpp,.o,$(TESTS_CPP))

CPPFLAGS += $(GTEST_INCLUDE) -DGTEST_HAS_PTHREAD=0

# Flags passed to the C++ compiler.
CXXFLAGS += -g

all : unittests

clean :
	rm $(OBJ_DIR) -rf

$(OBJ_DIR):
	${MKDIR_P} ${OBJ_DIR}

gtest-all.o :$(OBJ_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(GTEST_DIR)/src/gtest-all.cc -o $(OBJ_DIR)$@

gtest_main.o :$(GTEST_MAIN_CC) $(OBJ_DIR)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(GTEST_MAIN_CC) -o $(OBJ_DIR)$@


$(OBJS): ${OBJ_DIR}
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDE_PATH) -c $(basename $@).cpp $^ -o $(OBJ_DIR)$(notdir $@) -D UNIT_TEST

unittests : gtest-all.o gtest_main.o $(OBJS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(wildcard $(OBJ_DIR)/*.o) -o $(OBJ_DIR)$@